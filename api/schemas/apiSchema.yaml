openapi: 3.0.0
info:
  title: WebNotes API
  description: API for managing notes in the WebNotes app
  version: 1.0.0

servers:
  - url: https://api.webnotes.com/v1
    description: Production server

tags:
  - name: notes
    description: Endpoints related to note management
  - name: user
    description: Endpoints related to user / authorization management

paths:
  /notes/all:
    get:
      summary: Get all notes
      description: Returns a list of note previews with truncated text.
      tags:
        - notes
      responses:
        '200':
          description: A list of note previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'

  /notes/all/previews:
    get:
      summary: Get all note previews
      description: Returns a list of note previews with truncated text.
      tags:
        - notes
      responses:
        '200':
          description: A list of note previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotePreview'

  /notes/{id}:
    get:
      summary: Get a note by ID
      description: Returns a full note by its ID.
      tags:
        - notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Note found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    put:
      summary: Update an existing note
      description: Updates an existing note based on its ID.
      tags:
        - notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Invalid request data
        '404':
          description: Note not found
    delete:
      summary: Delete a note by ID
      description: Deletes a note from the system.
      tags:
        - notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Note not found

  /notes:
    post:
      summary: Create a new note
      description: Creates a new note and returns the created note object.
      tags:
        - notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Invalid request data

  /notes/recent:
    get:
      summary: Get recently opened notes
      description: Returns a specified number of recently opened notes.
      tags:
        - notes
      parameters:
        - name: limit
          in: query
          required: false
          description: The number of recent notes to retrieve (default is 5).
          schema:
            type: integer
            minimum: 1
            default: 5
      responses:
        '200':
          description: Recently opened notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'

  /notes/opened/{id}:
    put:
      summary: Update last opened time of note
      description: Updates the `updatedAt` timestamp of a note based on its ID.
      tags:
        - notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Note last opened time updated successfully (No Content)
        '400':
          description: Invalid request data
        '404':
          description: Note not found
  /sessions:
    get:
      summary: Get active sessions for the authenticated user
      description: Returns a list of active sessions for the logged-in user.
      tags:
        - user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of active sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'

  /sessions/{id}:
    delete:
      summary: Delete a session by ID
      description: Deletes a specific session, logging out that session.
      tags:
        - user
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Session removed'
        '404':
          description: Session not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NotePreview:
      type: object
      properties:
        _id:
          type: string
          x-originalName: _id
        bookmark:
          $ref: '#/components/schemas/Bookmark'
        textPreview:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string
      required:
        - _id
        - bookmark
        - textPreview
        - updatedAt
        - createdAt

    Note:
      type: object
      properties:
        _id:
          type: string
          x-originalName: _id
        bookmark:
          $ref: '#/components/schemas/Bookmark'
        text:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string
      required:
        - _id
        - bookmark
        - text
        - updatedAt
        - createdAt

    NoteUpdate:
      type: object
      properties:
        bookmark:
          $ref: '#/components/schemas/Bookmark'
        text:
          type: string
      required:
        - bookmark
        - text

    Bookmark:
      type: object
      properties:
        title:
          type: string
        color:
          type: string
      required:
        - title
        - color

    BookmarkWithNoteId:
      allOf:
        - $ref: '#/components/schemas/Bookmark'
        - type: object
          properties:
            _id:
              type: string

    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        verified:
          type: boolean
        createAt:
          type: string
        updatedAt:
          type: string

    Session:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        userAgent:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        isCurrent:
          type: boolean
          description: Indicates if this is the current session of the user
      required:
        - _id
        - userId
        - createdAt
        - expiresAt
