/* tslint:disable */
/* eslint-disable */
/**
 * WebNotes API
 * API for managing notes in the WebNotes app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BookmarkWithNoteId
 */
export interface BookmarkWithNoteId {
    /**
     * 
     * @type {string}
     * @memberof BookmarkWithNoteId
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof BookmarkWithNoteId
     */
    color: string;
    /**
     * 
     * @type {string}
     * @memberof BookmarkWithNoteId
     */
    id?: string;
}

/**
 * Check if a given object implements the BookmarkWithNoteId interface.
 */
export function instanceOfBookmarkWithNoteId(value: object): value is BookmarkWithNoteId {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    return true;
}

export function BookmarkWithNoteIdFromJSON(json: any): BookmarkWithNoteId {
    return BookmarkWithNoteIdFromJSONTyped(json, false);
}

export function BookmarkWithNoteIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookmarkWithNoteId {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'color': json['color'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function BookmarkWithNoteIdToJSON(json: any): BookmarkWithNoteId {
    return BookmarkWithNoteIdToJSONTyped(json, false);
}

export function BookmarkWithNoteIdToJSONTyped(value?: BookmarkWithNoteId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'color': value['color'],
        'id': value['id'],
    };
}

